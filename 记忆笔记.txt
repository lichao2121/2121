8.29
商城排序不熟要练习
正则内容有迷茫地方，有时间刷视频
前边知识有些记得不清楚，要从新过一遍
js向css和HTML添加获取样式不会了
先过今天笔记，回去刷盒子模型视频
document.querySelector()不懂

....

8.30
scroll
定时器时间怎么回事
repelct替换
return



同步代码异步代码

JSON对象那


...在等号左边一般用来做剩余运算符，只能用在末尾，等号右边做展开运算符，，在函数形参中相当于aeguments，剩余运算符，打包成数字






 let flag = getComputedStyle(ul)['display'];

 span.previousElementSibling.className='opan'

 let ul = span.nextElementSibling;

 background: -webkit-linear-gradient(top left,yellowgreen,orange,green,blue);

!ele[type].includes(fn)

 box.style.background = `rgba(${Math.round(Math.random()*255)},${Math.round(Math.random()*255)},${Math.round(Math.random()*255)},${Math.random()})`



  transform: translateY(-3px);
    box-shadow: 0 2px 3px rgba(0,0,0,.02), 0 16px 32px -4px rgba(0,0,0,.17);
    transition: all 0.5s;



var obj={age:9}
    Object.assign(obj,{name:'kk'},{a:8})//obj={age:9,name:'kk',a:8}//合并，将所有对象合并到第一个对象中



 **in **判断当前属性是否在当前对象当中，通过in这种方式既可以检测私有属性，也可以检测公有属性；   检测出来的值是一个布尔值
   - hasOwnProperty 私有属性：检测当前的值是否是对象的私有属性，返回一个布尔值
 



e.target.tagName ==='SPAN'元素
e.target.id =='center'元素id




typeof  a[i]==='function'




<input type="text" placeholder="请输入你要输入 的内容">

  border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg);




:nth-of-type(1) ：父级元素下面相同类型的第一个子元素





  box-shadow: 0 0 0 0 #00cc99;
      .transition(@property: box-shadow;@duration: 0.5s);
      &:hover{
        background: #00cc99;
        box-shadow: 0 0 0 30px transparent;
      }





if($playBtn.hasClass('rotateClass')){//检测是否有这个类名
        $playBtn.removeClass('rotateClass');
        myAudio.pause();//音频文件停止播放
    }else {
        $playBtn.addClass('rotateClass');//添


cursor: pointer;


width: 630px;
    padding: 10px 10px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    float: left;


 font-size: 14px;
    line-height: 20px;
    letter-spacing: 0;
    height: 20px;
    margin-top: 4px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 182px;
    color: #333333;
    margin-bottom: 10px;

 width: 100%;
    font-size: 14px;
    color: #666666;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    height: 44px;
    position: relative;
    line-height: 22px;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;


document.onvisibilitychange=function () {
            if(document.visibilityState=="hidden"){
                clearInterval(times);
                clearInterval(timer)
            }else {
                times=setInterval(autoMoves,4000);
                timer=setInterval(autoMove,4000);
            }
        };


   this.className = 'active';



    lis[j].classList.remove('active');
                // 把色块其他的颜色都清除
                contains[j].classList.remove('active')
            }
            //this => 当前点击的元素
            // 选项卡进行变色
         

    lis[j].className = '';// 点击的时候,再发生一次循环,让所有的标签都清空;所有的标签都清空结束后,我再给你添加类名active
                contents[j].className = '';//把内容的每一项类名都清空,只有点击的那一项显示就可以了
            }
            //我点击的时候想让这个选项变成橙色,我可以通过事件中是this给它添加
            this.className = 'active';
            //我们希望点击选项1的时候,内容1也跟着



  // random 取随机的小数
    // 不传表示 从0-1之间的一个随机小数
    var a = Math.random()
    console.log(a);
    // 取100以内的一个随机小数
    var a = Math.random()*100;
    var a = Math.round(Math.random()*100)//


    // replace
    var reg = /(\w+)=(\w+)/g;
    var obj = {};
    str.replace(reg,function () {// replace(旧,新) 将字符串中的旧的字符串替换成新的字符串
        // 第二个参数可以传入一个函数,字符串识别第一个参数,函数执行一次
        obj[arguments[1]]=arguments[2]
    })
    console.log(Object.keys(obj).length);



window.getComputedStyle(ele)[attr])



 box-shadow: 0 1px 6px 0 #ccc;
    z-index: 9999;
    transition: all .5s ease;
    display: none;
